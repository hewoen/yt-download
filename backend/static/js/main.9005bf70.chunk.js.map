{"version":3,"sources":["elements/api/api.js","elements/jobrow.js","elements/JobQueue.js","elements/confirmationButton.js","elements/PatternInput.js","elements/jobForm.js","elements/api/CookieManagement.js","elements/loginForm.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","storeMailAddress","mail","formdata","FormData","append","axios","post","formatTime","timestamp","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","JobRow","props","state","render","row","window","confirm","id","callback","json","then","res","data","api","this","setState","status_code","console","log","TableRow","sx","border","TableCell","ts_start","type","href","url","target","title","status","className","download_url","onClick","e","removeChild","React","Component","JobQueue","TableContainer","component","Paper","Table","minWidth","TableHead","TableBody","rows","map","ConfirmationButton","captionDisabled","captionEnabled","class","disabled","enabled","PatternInput","matched","currentValue","value","pattern","test","onMatch","placeholder","onChange","valueChanged","JobForm","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","cookies","confirmationButtonEnabled","useMailNotification","unsetTicker","k","push","setTicker","get","ticker","setInterval","update","clearInterval","sendMail","cvalue","exdays","d","setTime","getTime","expires","toUTCString","alert","concat","addJobButtonClicked","bind","checked","v","mailPatternMatched","LoginForm","password","remember","success","size","loginButtonClicked","location","reload","Header","CreateSession","uid","useParams","App","useState","loggedIn","setLoggedIn","defaults","withCredentials","useEffect","logged_in","path","element","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9005bf70.chunk.js","sourcesContent":["import axios, { Axios } from \"axios\";\nimport React from \"react\";\nconst baseURL = \"https://yt-download.woenne.de/api.php\";\n\nconst IN_QUEUE = 1;\nconst IN_PROGRESS = 2;\nconst FINISHED = 3;\n\nfunction addJob(url, type, callback)\n{\n    let formdata = new FormData();\n    formdata.append(\"url\", url);\n    formdata.append(\"type\", type);\n    axios.post(\n        baseURL + \"?action=addJob\",\n        formdata\n    ).then(res => callback(res.data));\n}\n\nfunction getJobs(callback){\n    axios.get(baseURL + \"?action=getQueue\")\n    .then(res => callback(res.data));\n}\n\nfunction getStatus(status_code){\n    let status = {\n        1 : <span className=\"status-in-queue\">In queue</span>,\n        2 : <span className=\"status-in-progress\">In progress</span>,\n        3 : <span className=\"status-finished\">Finished</span>\n    }\n    return status[status_code];\n}\n\nfunction removeJob(id,callback=(json) => {}){\n    let formdata = new FormData();\n    formdata.append(\"id\", id);\n    axios.post(\n        baseURL + \"?action=removeJob\",\n        formdata\n    ).then(res => callback(res.data));\n}\n\nfunction checkLogin(callback){\n axios.get(baseURL + \"?action=checkLogin\").then(\n        res => callback(res.data)\n    );\n}\n\nfunction login(password,remember, callback){\n    let formdata = new FormData();\n    formdata.append(\"password\", password);\n    formdata.append(\"remember\", remember ? \"true\" : \"false\");\n    axios.post(\n        baseURL + \"?action=login\",\n        formdata\n    ).then(\n        res => {return callback(res.data)}\n    );\n}\n\nfunction createSession(uid, callback){\n    axios.get(baseURL + \"?action=createSession&uid=\" + uid).then(\n    (res) => callback(res.data.success));\n}\n\nfunction storeMailAddress(mail){\n    let formdata = new FormData();\n    formdata.append(\"mail\", mail);\n    axios.post(baseURL + \"?action=storeMailAddress\", formdata);\n}\n\nexport {addJob,getStatus,getJobs,removeJob,checkLogin,login,createSession,storeMailAddress,IN_QUEUE,IN_PROGRESS,FINISHED}","import React from \"react\";\nimport * as api from './api/api';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { Tab } from \"@mui/material\";\n\nfunction formatTime(timestamp){\n    let date = new Date(timestamp * 1000);\n    let formatedDate =\n        date.getDate() + \".\" +\n        (date.getMonth()+1) + \".\" +\n        date.getFullYear() + \" - \" +\n        date.getHours() + \":\" +\n        date.getMinutes() + \":\" +\n        date.getSeconds()\n        ;\n    return formatedDate;\n\n}\n\nclass JobRow extends React.Component{\n    constructor(props){\n        super(props);\n        this.row = this.props.row;\n    }    \n\n    state = {render : true};\n\n    removeChild(){\n        let confirmed = window.confirm(\"Do you realy want remove this job?\");\n        if(confirmed){\n            api.removeJob(this.row.id, () => this.setState({render : false }));\n        }\n    }\n\n\n    render(){\n            console.log(\"Job Row\");\n            if(this.state.render){\n                return(\n                    <TableRow\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                    >\n                    <TableCell>{formatTime(this.row.ts_start)}</TableCell>\n                    <TableCell>{this.row.type}</TableCell>\n                    <TableCell>{<a href={this.row.url} target=\"_blank\">{this.row.title}</a>}</TableCell>\n                    <TableCell>{api.getStatus(this.row.status)}</TableCell>\n                    <TableCell>{this.row.status==api.FINISHED ? <a href={this.row.download_url}>Download here</a> : \"\"}</TableCell>\n                    <TableCell><span onClick={(e) => this.removeChild()} className=\"btn-remove\">x</span></TableCell>\n                    </TableRow>\n                );\n            }\n            else{\n                return null;\n            }\n    }\n\n\n\n}\n\nexport default JobRow;","import React from \"react\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport JobRow from \"./jobrow\";\n\nclass JobQueue extends React.Component{\n\n\n        render(){\n            return(\n                <div>\n                        <h2>Queue</h2>\n                        <TableContainer component={Paper}>\n                            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                                <TableHead>\n                                <TableRow>\n                                    <TableCell>Start</TableCell>\n                                    <TableCell>Type</TableCell>\n                                    <TableCell>Title</TableCell>\n                                    <TableCell>Current status</TableCell>\n                                    <TableCell></TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {\n                                        this.props.rows.map(\n                                            row => {\n                                                return(\n                                                    <JobRow row={row} />\n                                                );\n                                            }\n                                        )\n                                    }\n                                </TableBody>\n                            </Table>\n                            </TableContainer>\n                            \n\n    </div>\n            );\n    }\n}\n\nexport default JobQueue;","import React from \"react\";\nclass ConfirmationButton extends React.Component{\n\n    captionDisabled = \"In Progress...\";\n    constructor(props){\n        super(props);\n        this.captionEnabled = this.props.captionEnabled;\n    }\n\n    render(){\n        return(\n            <button class=\"btn\" disabled={!this.props.enabled} id=\"btn_confirm\" onClick={() => this.props.onClick()}>{this.props.enabled ? this.captionEnabled : this.captionDisabled}</button>\n        );\n        }\n\n}\n\nexport default ConfirmationButton","import React from \"react\";\n\nclass PatternInput extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {matched : false,currentValue:this.props.value};\n    }\n    \n\n    valueChanged(e){\n        this.setState({currentValue : e.target.value});\n        if(this.props.pattern.test(e.target.value)){\n            \n            this.props.onMatch(e.target.value);\n            this.setState({matched : true});\n        }\n    }\n\n    render(){\n        let className= this.state.matched ? \"pattern-input-matched\" : \"pattern-input-unmatched\";\n\n        return(<input value={this.state.currentValue} placeholder={this.props.placeholder} disabled={!this.props.enabled} type=\"text\" onChange={e => this.valueChanged(e)} className={className}/>);\n    }   \n    \n}\n\nexport default PatternInput;","import React from 'react';\nimport JobQueue from './JobQueue';\nimport * as api from './api/api';\nimport * as cookies from './api/CookieManagement';\nimport ConfirmationButton from './confirmationButton';\nimport PatternInput from './PatternInput'\n\nclass JobForm extends React.Component{\n    url = \"\";\n    type = \"\";\n    mail = \"\";\n    pattern = /^[a-zA-Z0-9\\-_\\.]+@[a-zA-Z0-9\\-_\\.]+\\.[a-z]{2,}$/; //Pattern to validate mail address\n    constructor(props){\n        super(props);\n        this.mail=cookies.getCookie(\"mail\");\n        this.state = {\n          rows : [],\n          url : \"\",\n          type : \"\",\n          confirmationButtonEnabled : true,\n          useMailNotification : false\n        }\n\n        \n      }\n\n      update(){\n        this.unsetTicker();\n        api.getJobs(\n            json => {\n                let rows = [];\n                for(var k in json){\n                  rows.push(json[k]);\n                }\n                this.setState({\n                  rows : []\n                });\n                this.setState({rows : rows});\n                this.setTicker();\n            }\n        )\n    }\n\n    setTicker(){\n        this.ticker = setInterval(() => this.update(), 10000);\n    }\n\n    unsetTicker(){\n        clearInterval(this.ticker);\n    }\n\n    componentDidMount(){\n        this.setTicker();\n        this.update();\n    }\n\n    componentDidUnmount(){\n        this.unsetTicker();\n    }\n\n    storeMailAddress(sendMail = this.state.useMailNotification){\n      if(sendMail){\n        api.storeMailAddress(this.mail);\n      }\n      else{\n        api.storeMailAddress(\"\");\n      }\n    }\n\n    mailPatternMatched(mail){\n      this.mail = mail;\n      this.storeMailAddress();\n      cookies.setCookie(\"mail\", mail, 28);\n    }\n\n      addJobButtonClicked(){\n        if(this.type===\"\"){\n          alert(\"Please select a format\");\n          return ;\n        }\n\n        for(var k in this.state.rows){\n          if(this.state.rows[k].url === this.url){\n            alert(\"This clip is aleady in your queue!\");\n            return ;\n          }\n        }\n        this.unsetTicker();\n        this.setState({confirmationButtonEnabled : false});\n        api.addJob(\n          this.url,\n          this.type,\n          (json) => \n          { \n            if(json.title!=null){\n              this.storeMailAddress();\n              alert(\"The download job was added sucessfully to your queue.\"); \n              this.setState({\n                rows : this.state.rows.concat([json]),\n                confirmationButtonEnabled : true});\n            }\n            else{\n              alert(\"Invalid URL: \" + this.url);\n              this.setState({\n                confirmationButtonEnabled : true\n              });\n            }\n            this.setTicker();\n          \n          }\n        )\n       \n        \n      }\n\n\n    \n      render(){\n        return(\n            <div id=\"jobForm\">\n                <fieldset>\n                <legend>URL</legend>\n                <input type=\"text\" id=\"url\" onChange={(e) => this.url = e.target.value}/>\n                </fieldset>\n                <fieldset>\n                <legend>Gewünschtes Format</legend>\n                Audio \n                <input type=\"radio\" name=\"type\" value=\"audio\" onChange={(e) => this.type = e.target.value} />\n                Video \n                <input type=\"radio\" name=\"type\" value=\"video\" onChange={(e) => this.type = e.target.value} />\n                </fieldset>\n                <ConfirmationButton captionEnabled=\"Add job to queue\" enabled={this.state.confirmationButtonEnabled} onClick={this.addJobButtonClicked.bind(this)} />\n                <hr />\n                <p>\n                <fieldset>\n                  <legend>\n                    E-Mail notification\n                  </legend>\n                <input type=\"checkbox\" checked={this.state.useMailNotification} onClick={() => {this.setState({useMailNotification : !this.state.useMailNotification}); this.storeMailAddress(!this.state.useMailNotification); }} />\n                <PatternInput value={this.mail} placeholder=\"E-Mail\" enabled={this.state.useMailNotification} pattern={this.pattern} onMatch={v => this.mailPatternMatched(v)} />\n                </fieldset>\n              </p>\n              <div>\n                <JobQueue rows={this.state.rows} />\n              </div>\n\n            </div>\n        );\n    }\n      \n}\n\nexport default JobForm;","function setCookie(cname, cvalue, exdays) {\n    const d = new Date();\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\n    let expires = \"expires=\"+ d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n  }\n\n  function getCookie(cname) {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(';');\n    for(let i = 0; i <ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n\nexport {setCookie, getCookie};","import React from 'react';\nimport * as api from './api/api';\nimport ConfirmationButton from './confirmationButton';\n\n\n\nclass LoginForm extends React.Component{\n    password = \"\";\n    \n    constructor(props){\n        super(props);\n        this.state = {\n          confirmationButtonEnabled : true,\n          remember : true,\n          success : false\n        }\n        \n      }\n\n\n      loginButtonClicked(){\n        this.setState({\n          confirmationButtonEnabled : false\n        });\n        api.login(this.password, this.state.remember, json => {\n          if(json.success){\n            this.setState({success : true})\n          }\n          else{\n            alert(\"Wrong password!\");\n            this.setState({confirmationButtonEnabled : true});\n          }\n        });\n\n      }\n\n    \n      render(){\n        if(!this.state.success){\n          return(\n              <div id=\"loginForm\">\n                  <fieldset>\n                  <legend>Password</legend>\n                  <input type=\"password\" size=\"20\" onChange={(e) => this.password = e.target.value}/><br/>\n                  Remember me \n                  <input type=\"checkbox\" checked={this.state.remember} onClick={(e) => this.setState({remember : !this.state.remember})} /><br/>\n                  <ConfirmationButton captionEnabled=\"Login\" enabled={this.state.confirmationButtonEnabled} onClick={this.loginButtonClicked.bind(this)} />\n                  </fieldset>\n              </div>\n          );\n        }\n        else{\n         window.location.reload();\n        }\n    }\n      \n}\n\nexport default LoginForm;","import JobForm from './elements/jobForm';\nimport axios from 'axios';\nimport { BrowserRouter as Router , Routes, Route, Navigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport * as api from './elements/api/api';\nimport './App.css';\nimport LoginForm from './elements/loginForm';\nimport { useEffect,useState } from 'react';\n\n\n\nfunction Header(){\n  return(\n  <div id=\"header\">\n    <h1>YT-Downloader</h1>\n  </div>\n  );\n}\n\nfunction CreateSession(){\n  let {uid} = useParams();\n  console.log(uid);\n  api.createSession(uid,success => {\n    if(!success){\n      alert(\"Session was not found. Maybe it is expired. If you use the remember function a new session with empty queue will started.\");\n    }\n    window.location.href=\"/login\";\n  });\n}\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(null)\n  axios.defaults.withCredentials = true;  \n\n  useEffect(() => {\n    api.checkLogin(\n      (res) => {setLoggedIn(res.logged_in)}\n    )\n  }, [] );\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div id=\"main\">\n      <Router>\n        <Routes>\n        <Route path='/login/:uid/' element={<CreateSession/>}></Route>\n        <Route path='/login' element={loggedIn ? <Navigate push to=\"/\" /> : <LoginForm />}></Route>\n        <Route path='/' element={ !loggedIn ? <Navigate push to=\"/login\" /> : <JobForm />}></Route>\n        </Routes>\n      </Router>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}